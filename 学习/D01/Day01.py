"""一"""

"""什么是信号"""
#信号是一个函数，它将时间（或空间）映射到某种物理量上。信号可以是连续的或离散的，常见的例子包括声音、图像和电磁波等。

#连续信号
#是指在时间或空间上连续变化的信号。
#它可以在任意时刻取值，通常用数学函数来表示。
#例如，声音信号可以用一个连续的函数来描述其振幅随时间的变化。

#离散信号
#是指在时间或空间上不连续的信号。
#它只能取有限个值，通常用数组来表示。
#例如，图像信号可以用一个二维数组来表示，数组中的每个元素表示图像的某个像素点的颜色。

"""信号的分类"""
#信号的分类有很多种，但是常用的有下面几种：
#按变量分类：
#一维信号：信号的变量是时间或空间（音频，心电）
#二维信号：信号的变量是时间、空间和两个以上的变量 （音频，视频）
#三维信号：信号的变量是时间、空间和三个以上的变量 （视频）

#按数据形式分类：
#连续信号：信号的数据是连续的（音频，心电）
#离散信号：信号的数据是离散的（图像，视频）

#按值的种类分类：
#连续幅度信号：值可以是任意实数
#数字幅度信号：值是数字编码

#假如我有一张MRI图像：每个像素点都对应一个数字，那么这个图像就是一个数字幅度信号。
"""[
  [12, 15, 18],
  [14, 22, 20],
  [16, 18, 19]
]"""
#这个图像其实就是一个二维离散信号，每个位置 (x, y) 对应一个强度值。
#我们做的卷积、滤波、分割、增强、蒸馏……统统都是在对这个信号做处理！


"""二"""

"""采样与量化"""
#采样是将连续信号转换为离散信号的过程。
#在采样过程中，我们选择在连续信号的特定时间点上取样，得到一系列离散的数值。
#   连续信号      →    （采样）      → 离散信号 →（量化） →     数字信号
#连续信号（模拟）  →  离散时间（采样）  →  离散幅度（量化）  →  计算机可存储处理
#     x(t)      →     x[n]        →     x_q[n]      →   二进制数字数组

'采样'
#采样是将连续信号在时间上离散化的过程。
#关键参数：
#采样周期：两个采样点之间的时间间隔。
#采样频率：每秒采样多少次（hz

"奈奎斯特采样定理"
#奈奎斯特采样定理指出，为了保留原始信号的频率成分，避免混叠现象，采样频率必须至少是信号最高频率的两倍。
#如果采样频率低于这个值，信号的高频成分会被错误地映射到低频成分上，导致混叠现象。

'量化'
#量化是将离散信号的幅度值转换为有限个数字值的过程。
#量化引入“误差”，这叫量化噪声
#位数越高，误差越小，但文件越大


"""离散傅立叶变换（DFT）"""
#离散傅立叶变换（DFT）是将离散信号从时域转换到频域的数学工具。
#他像是一个“魔法镜子”，可以让我们看到信号的频率成分。 把平时见到的波形变成包含了哪些正弦波的频谱图。
#直觉解释：
#一个复杂信号，比如：x[n] = 正弦波 + 噪声 + 高低频成分
#DFT 就是把它拆解成一堆“正弦波成分”：x[n] ≈ A1·sin(f1) + A2·sin(f2) + ... + An·sin(fn)

#数学公式：
# X[k] = Σ (n=0 to N-1) x[n] * e^(-j * 2π * k * n / N)
#其中，X[k] 是频域信号，x[n] 是时域信号，N 是信号长度，k 是频率索引。

"""快速傅立叶变换（FFT）"""
#快速傅立叶变换（FFT）是 DFT 的高效算法。
#什么是FFT？FFT（Fast Fourier Transform）不是新东西，它就是在“做 DFT”，但用了一种更聪明的方式，大幅减少重复计算。
#在 NumPy 和 PyTorch、SciPy、OpenCV、MATLAB 里，所有 .fft() 实际上都是 FFT算法的实现，非常高效！On2 -> On






